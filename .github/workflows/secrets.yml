name: Get Secrets Info

on:
  workflow_dispatch:

jobs:
  get-secrets:
    runs-on: ubuntu-latest
    permissions:
      contents: write  
      actions: read
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Obtendo Secrets de Organização
        run: |
          count_secret=$(curl -L -H "Accept: application/vnd.github+json" -H "Authorization: Bearer ${{ secrets.GH_TOKEN }}" -H "X-GitHub-Api-Version: 2022-11-28" https://api.github.com/orgs/${{ github.repository_owner }}/actions/secrets  | jq .total_count)
          secrets=$(curl -L -H "Accept: application/vnd.github+json" -H "Authorization: Bearer ${{ secrets.GH_TOKEN }}" -H "X-GitHub-Api-Version: 2022-11-28" https://api.github.com/orgs/${{ github.repository_owner }}/actions/secrets  | jq .secrets)

          final_count_secret=$(($count_secret - 1))

          for i in $(seq 0 $final_count_secret)
          do
              nome=$(echo $secrets | jq .[$i].name | sed 's/"//g')
              linha=$(cat README.md | grep -n "TABELA:END" | cut -d: -f1)
              verifica_permissao_repo_count=$(curl -L -H "Accept: application/vnd.github+json" -H "Authorization: Bearer ${{ secrets.GH_TOKEN }}" -H "X-GitHub-Api-Version: 2022-11-28" https://api.github.com/orgs/${{ github.repository_owner }}/actions/secrets/$nome/repositories | jq .total_count)
              verifica_permissao_repo_name=$(curl -L -H "Accept: application/vnd.github+json" -H "Authorization: Bearer ${{ secrets.GH_TOKEN }}" -H "X-GitHub-Api-Version: 2022-11-28" https://api.github.com/orgs/${{ github.repository_owner }}/actions/secrets/$nome/repositories | jq .repositories)
              verifica_permissao_repo_count_final=$(($verifica_permissao_repo_count - 1))
              exist=false
              for j in $(seq 0 $verifica_permissao_repo_count_final)
              do
                  repo_name=$(echo $verifica_permissao_repo_name | jq .[$j].name | sed 's/"//g')

                  if [ $repo_name == "poc-secrets" ]; then
                      echo "Repositório com permissão: $repo_name"
                      sed -i "${linha}i | $nome | ![org](https://img.shields.io/badge/-secret-orange) | ![org](https://img.shields.io/badge/explicito-REPO-blue) | ![org](https://img.shields.io/badge/-ORG-green) |" README.md
                      exist=true

                  fi
              done
              if [ $exist == false ]; then
                  sed -i "${linha}i | $nome | ![org](https://img.shields.io/badge/-secret-orange) | ![org](https://img.shields.io/badge/-ORG-blue) | ![org](https://img.shields.io/badge/-ORG-green) |" README.md
              fi
              
          done

      - name: Obtendo Secrets de Repositório
        run: |
          count_repo_secret=$(curl -L -H "Accept: application/vnd.github+json" -H "Authorization: Bearer ${{ secrets.GH_TOKEN }}" -H "X-GitHub-Api-Version: 2022-11-28" https://api.github.com/repos/${{ github.repository }}/actions/secrets | jq .total_count)
          repo_secret=$(curl -L -H "Accept: application/vnd.github+json" -H "Authorization: Bearer ${{ secrets.GH_TOKEN }}" -H "X-GitHub-Api-Version: 2022-11-28" https://api.github.com/repos/${{ github.repository }}/actions/secrets | jq .secrets)

          final_count_repo_secret=$(($count_repo_secret - 1))

          for i in $(seq 0 $final_count_repo_secret)
          do
              nome_repo=$(echo $repo_secret | jq .[$i].name | sed 's/"//g')
              linha=$(cat README.md | grep -n "TABELA:END" | cut -d: -f1)
              
              sed -i "${linha}i | $nome_repo | ![org](https://img.shields.io/badge/-secret-orange) | ![org](https://img.shields.io/badge/REPO-blue) | ![org](https://img.shields.io/badge/-REPO-blue) |" README.md
          done          

      - name: Obtendo Secrets por Ambiente
        run: |
          repo_id=$(curl -L -H "Accept: application/vnd.github+json" -H "Authorization: Bearer ${{ secrets.GH_TOKEN }}" -H "X-GitHub-Api-Version: 2022-11-28" https://api.github.com/repos/${{ github.repository }} | jq .id)
          count_env=$(curl -L -H "Accept: application/vnd.github+json" -H "Authorization: Bearer ${{ secrets.GH_TOKEN }}" -H "X-GitHub-Api-Version: 2022-11-28" https://api.github.com/repos/${{ github.repository }}/environments | jq .total_count)
          env_name=$(curl -L -H "Accept: application/vnd.github+json" -H "Authorization: Bearer ${{ secrets.GH_TOKEN }}" -H "X-GitHub-Api-Version: 2022-11-28" https://api.github.com/repos/${{ github.repository }}/environments | jq .environments)
          final_count_env=$(($count_env - 1))

          for i in $(seq 0 $final_count_env)
          do
              nome_env=$(echo $env_name | jq .[$i].name | sed 's/"//g')
              linha=$(cat README.md | grep -n "TABELA:END" | cut -d: -f1)
              
              count_secret_by_env=$(curl -L -H "Accept: application/vnd.github+json" -H "Authorization: Bearer ${{ secrets.GH_TOKEN }}" -H "X-GitHub-Api-Version: 2022-11-28" https://api.github.com/repositories/$repo_id/environments/$nome_env/secrets | jq .total_count)
              list_secret_env=$(curl -L -H "Accept: application/vnd.github+json" -H "Authorization: Bearer ${{ secrets.GH_TOKEN }}" -H "X-GitHub-Api-Version: 2022-11-28" https://api.github.com/repositories/$repo_id/environments/$nome_env/secrets | jq .secrets)
              final_count_secret_by_env=$(($count_secret_by_env - 1))
              for j in $(seq 0 $final_count_secret_by_env)
              do
                  nome_secret_env=$(echo $list_secret_env | jq .[$j].name | sed 's/"//g')
                  
                  sed -i "${linha}i | $nome_secret_env | ![org](https://img.shields.io/badge/-secret-orange) | ![org](https://img.shields.io/badge/ENV-blue) | ![org](https://img.shields.io/badge/-$nome_env-red) |" README.md
              done

          done


      - name: Obtendo Variaveis de Organização
        run: |
          count_secret=$(curl -L -H "Accept: application/vnd.github+json" -H "Authorization: Bearer ${{ secrets.GH_TOKEN }}" -H "X-GitHub-Api-Version: 2022-11-28" https://api.github.com/orgs/${{ github.repository_owner }}/actions/variables  | jq .total_count)
          secrets=$(curl -L -H "Accept: application/vnd.github+json" -H "Authorization: Bearer ${{ secrets.GH_TOKEN }}" -H "X-GitHub-Api-Version: 2022-11-28" https://api.github.com/orgs/${{ github.repository_owner }}/actions/variables  | jq .variables)

          final_count_secret=$(($count_secret - 1))

          for i in $(seq 0 $final_count_secret)
          do
              nome=$(echo $secrets | jq .[$i].name | sed 's/"//g')
              linha=$(cat README.md | grep -n "TABELA:END" | cut -d: -f1)
              verifica_permissao_repo_count=$(curl -L -H "Accept: application/vnd.github+json" -H "Authorization: Bearer ${{ secrets.GH_TOKEN }}" -H "X-GitHub-Api-Version: 2022-11-28" https://api.github.com/orgs/${{ github.repository_owner }}/actions/variables/$nome/repositories | jq .total_count)
              verifica_permissao_repo_name=$(curl -L -H "Accept: application/vnd.github+json" -H "Authorization: Bearer ${{ secrets.GH_TOKEN }}" -H "X-GitHub-Api-Version: 2022-11-28" https://api.github.com/orgs/${{ github.repository_owner }}/actions/variables/$nome/repositories | jq .repositories)
              verifica_permissao_repo_count_final=$(($verifica_permissao_repo_count - 1))
              exist=false
              for j in $(seq 0 $verifica_permissao_repo_count_final)
              do
                  repo_name=$(echo $verifica_permissao_repo_name | jq .[$j].name | sed 's/"//g')

                  if [ $repo_name == "poc-secrets" ]; then
                      echo "Repositório com permissão: $repo_name"
                      sed -i "${linha}i $nome | Permissão Explicita no Repo <br>" README.md
                      sed -i "${linha}i | $nome | ![org](https://img.shields.io/badge/-variable-yellow) | ![org](https://img.shields.io/badge/explicito-REPO-blue) | ![org](https://img.shields.io/badge/-ORG-green) |" README.md
                      exist=true

                  fi
              done
              if [ $exist == false ]; then
                  sed -i "${linha}i | $nome | ![org](https://img.shields.io/badge/-variable-yellow) | ![org](https://img.shields.io/badge/-ORG-blue) | ![org](https://img.shields.io/badge/-ORG-green) |" README.md
              fi
              
          done

      - name: Obtendo Variaveis de Repositório
        run: |
          count_repo_secret=$(curl -L -H "Accept: application/vnd.github+json" -H "Authorization: Bearer ${{ secrets.GH_TOKEN }}" -H "X-GitHub-Api-Version: 2022-11-28" https://api.github.com/repos/${{ github.repository }}/actions/variables | jq .total_count)
          repo_secret=$(curl -L -H "Accept: application/vnd.github+json" -H "Authorization: Bearer ${{ secrets.GH_TOKEN }}" -H "X-GitHub-Api-Version: 2022-11-28" https://api.github.com/repos/${{ github.repository }}/actions/variables | jq .variables)

          final_count_repo_secret=$(($count_repo_secret - 1))

          for i in $(seq 0 $final_count_repo_secret)
          do
              nome_repo=$(echo $repo_secret | jq .[$i].name | sed 's/"//g')
              linha=$(cat README.md | grep -n "TABELA:END" | cut -d: -f1)
              
              sed -i "${linha}i | $nome_repo | ![org](https://img.shields.io/badge/-variable-yellow) | ![org](https://img.shields.io/badge/REPO-blue) | ![org](https://img.shields.io/badge/-REPO-blue) |" README.md
          done 

      - name: Obtendo Variaveis por Ambiente
        run: |
          repo_id=$(curl -L -H "Accept: application/vnd.github+json" -H "Authorization: Bearer ${{ secrets.GH_TOKEN }}" -H "X-GitHub-Api-Version: 2022-11-28" https://api.github.com/repos/${{ github.repository }} | jq .id)
          count_env=$(curl -L -H "Accept: application/vnd.github+json" -H "Authorization: Bearer ${{ secrets.GH_TOKEN }}" -H "X-GitHub-Api-Version: 2022-11-28" https://api.github.com/repos/${{ github.repository }}/environments | jq .total_count)
          env_name=$(curl -L -H "Accept: application/vnd.github+json" -H "Authorization: Bearer ${{ secrets.GH_TOKEN }}" -H "X-GitHub-Api-Version: 2022-11-28" https://api.github.com/repos/${{ github.repository }}/environments | jq .environments)
          final_count_env=$(($count_env - 1))

          for i in $(seq 0 $final_count_env)
          do
              nome_env=$(echo $env_name | jq .[$i].name | sed 's/"//g')
              linha=$(cat README.md | grep -n "TABELA:END" | cut -d: -f1)
              
              count_secret_by_env=$(curl -L -H "Accept: application/vnd.github+json" -H "Authorization: Bearer ${{ secrets.GH_TOKEN }}" -H "X-GitHub-Api-Version: 2022-11-28" https://api.github.com/repositories/$repo_id/environments/$nome_env/variables | jq .total_count)
              list_secret_env=$(curl -L -H "Accept: application/vnd.github+json" -H "Authorization: Bearer ${{ secrets.GH_TOKEN }}" -H "X-GitHub-Api-Version: 2022-11-28" https://api.github.com/repositories/$repo_id/environments/$nome_env/variables | jq .variables)
              final_count_secret_by_env=$(($count_secret_by_env - 1))
              for j in $(seq 0 $final_count_secret_by_env)
              do
                  nome_secret_env=$(echo $list_secret_env | jq .[$j].name | sed 's/"//g')
                  
                   sed -i "${linha}i | $nome_secret_env | ![org](https://img.shields.io/badge/-variable-yellow) | ![org](https://img.shields.io/badge/ENV-blue) | ![org](https://img.shields.io/badge/-$nome_env-red) |" README.md
              done

          done

      - name: Commit changes
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: "Atualizando README.md"
          commit_options: '--no-verify'
          commit_user_name: arruda-bot
          commit_user_email: bot@arruda.io
